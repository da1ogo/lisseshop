services:
  bot:
    build:
      context: .
      dockerfile: bot/Dockerfile
    env_file:
      - .env
    volumes:
      - .:/bot
    depends_on:
      - miniapp_backend_dev

  miniapp_db_dev:
    container_name: "miniapp_db_dev"
    image: postgres:16
    volumes:
      - ./pg_db_dev:/miniapp_db
    restart: unless-stopped
    env_file:
      - .env
    environment:
      TZ: "Etc/UTC"
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8"
    ports:
      - "5433:5432"
    networks:
      - net_dev

  miniapp_backend_dev:
    build:
      context: .
      dockerfile: backend/Dockerfile
    env_file:
      - .env
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/dev_backend/backend
    networks:
      - net_dev
    depends_on:
      - miniapp_db_dev

  miniapp_frontend:
    build:
      context: .
      dockerfile: frontend/Dockerfile
    ports:
      - "5173:5173"
    volumes:
      - ./frontend:/miniapp_frontend
      - /miniapp_frontend/node_modules
    environment:
      - CHOKIDAR_USEPOLLING=true
      - VITE_DISABLE_DEVTOOLS=true
    networks:
      - net_dev

  nginx:
    image: nginx:latest
    container_name: nginx
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d/
      - ./nginx/html:/var/www/html
      - ./certbot/www:/var/www/certbot
      - ./certbot/conf:/etc/letsencrypt
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - certbot
    networks:
      - net_dev


  certbot:
    build:
      context: .
      dockerfile: certbot/dockerfile
    container_name: certbot
    volumes:
      - ./certbot/www:/var/www/certbot
      - ./certbot/conf:/etc/letsencrypt
      - /var/run/docker.sock:/var/run/docker.sock
    entrypoint:
      - /bin/sh
      - -c
      - |
        trap exit TERM
        while :; do
          certbot renew --deploy-hook "docker exec nginx nginx -s reload"
          sleep 12h
        done

networks:
  net_dev:
    driver: bridge
